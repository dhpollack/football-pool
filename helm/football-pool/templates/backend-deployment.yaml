apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "football-pool.fullname" . }}-backend
  labels:
    {{- include "football-pool.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "football-pool.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "football-pool.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          env:
            {{- if .Values.postgresql.enabled }}
            - name: FOOTBALL_POOL_DB_TYPE
              value: "postgres"
            - name: FOOTBALL_POOL_PG_HOST
              value: "{{ .Values.postgresql.clusterName }}-rw"
            - name: FOOTBALL_POOL_PG_PORT
              value: "5432"
            - name: FOOTBALL_POOL_PG_DBNAME
              value: {{ .Values.postgresql.database | quote }}
            - name: FOOTBALL_POOL_PG_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: FOOTBALL_POOL_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.clusterName }}-app
                  key: password
            {{- else }}
            {{- range $key, $val := .Values.backend.config.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
          {{- if .Values.backend.usersTomlSecret.enabled }}
          volumeMounts:
            - name: users-toml
              mountPath: "/app/config/users.toml"
              subPath: "users.toml"
              readOnly: true
          {{- end }}
      {{- if .Values.backend.usersTomlSecret.enabled }}
      volumes:
        - name: users-toml
          secret:
            secretName: {{ .Values.backend.usersTomlSecret.secretName }}
      {{- end }}
